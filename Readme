
ES6 项目总结

/************************************************项目构建×××××××××××××××××××××××××××××××××××××××××××××××××××××××*/

Es6项目构建

基础架构

    业务逻辑            自动构建                                                服务接口

页面        交互    编译        辅助                                       数据           接口

                          自动刷新  文件合并  资源压缩


任务自动化（gulp）

    什么是任务自动化：让电脑监听所有的操作，并自动响应

    什么是gulp：一个工具  自动化构建工具（二进制流的方式操作文件）

    gulp的作用： 完成任务自动化（基于node开发， 用各种插件完成各种任务） 用不同task的组合完成复杂的任务

    使用gulp实现自动化任务： gulp中文网




编译工具（babel webpack）
  babel： js 的编译器  es6不能直接在浏览器中运行 需要编译成 es5 或者更低的版本
  webpack: 解决模块化的工具
  webpack-stream: webpack 对 gulp的支持 （解决模块化依赖）




代码实现
  完成目录结构 （app server tasks 三个平级的目录 代表了一个前端项目的三个部分）
    app： 项目文件 (项目实际编写的代码)

    server： 服务器代码（将app中的相关代码编译成服务器可以执行的代码，进行开发环境测试）

    tasks: 自动构建脚本（自动进行文件的监听 编译等工作）

    .babelrc 文件 ： babel编译需要的文件
    gulpfile.babel.js ：  gulp 配置文件（因为使用了es6  所以是 bable.js）
    package.json : npm init (依赖配置文件)

  自动构建（gulp 用node写的， gulp中文网自学）

  tasks/util/arg.js  脚本：  创建 gulp 参数
  tasks/scripts.js   脚本：  处理js的脚本  打开文件->错误处理->重命名->编译->编译文件放入指定文件夹->重命名->压缩->压缩文件放入指定文件夹->热更新
  tasks/pages.js     脚本：  处理模板   打开app的模板文件  把模板文件放到server  热更新
  tasks/css.js       脚本：  处理css   同处理模板文件一样  拷贝 热更新
  tasks/server.js    脚本：  处理服务器的脚本
  task/browser.js    脚本：  处理浏览器监听 监听app目录的变化  自动调用 对应脚本处理任务  （自动调用  screpts.js  pages.js  css.js  针对app相应文件做对应处理）
  tasks/clean.js     脚本：  因为每次app的文件变化都要重新拷贝到server目录 所以开呗之前要先清空server中旧的拷贝文件

  tasks/build.js     脚本：  用各个脚本构建任务
  task/default.js    脚本：  创建gulp默认执行的脚本（任务）

  服务器搭建（都是基于 node ；  node相当于后端的 lamp lnmp）
  express -e .  搭建服务器， express是node实现的一个服务器脚手架工具

  -e : 使用ejs模板引擎
  ， ： 在当前目录

  要实现热更新 要修改 server/app.js  在特定位置加一个 热更新
  启动 gulp --watch






  ES6 项目总结

  /************************************************代码层面×××××××××××××××××××××××××××××××××××××××××××××××××××××××*/


  要实现的业务分为 ： 倒计时  金额注数计算   接口获取服务端（模拟）数据  及 一些基本方法操作

  根据上述 分为4个模块  也就是4个类  最后把 所有模块 通过自定义的多重继承 合并成一个类

  类中记录有页面上相关操作的选择器 如： class 等， 初始化事件绑定 并在构造函数中执行；
  之后在入口文件 index 中只要实例化类  即可


  本质上就是 js代码 功能区分 函数化  再以类的形式表现出来
  类的具体表现形式 和es6的具体语法 相关  对于语法的使用熟悉即可

  服务器端数据模拟（node.js）

  es6知识点

  作用域 let const
  解构赋值
  正则扩展
  数值扩展
  数组扩展
  函数扩展 箭头函数
  对象扩展
  字符串扩展
  Symbol
  数据结构（Set Map）
  Proxy 类的代理
  Reflect (代替 Object)
  类
  Promise 异步操作
  Generator 异步操作（和Promise 有区别）
  模块化

  文件结构
   app/
    css/
    js/
    view/

   node_modules/
   server/
   tasks/

   .babelrc  babel配置文件
   gulpfile.babel.js  gulp配置文件


   //
    张老师您好，我想咨询是否可以调剂您的非全日制研究生。

   （一）简略信息如下： 一志愿： 武大-933  分数：365。

   （二）我不知道如果调剂非全日制下面哪种情形，被录取的机会更高：①参加全日制的复试，被刷之后调剂非全日制 ②直接申请调剂非全日制，参加非全日制的复试？您是否了解相关情况？

   （三）详细信息：

        姓名：陈小龙

        本科学校：武汉纺织大学

        专业：电子信息工程

        本科主要课程：通信原理、信号与系统、数电、模电、电路分析、C++

        毕业年份：2016

        考生类型：工程硕士
        一志愿：武汉大学-933

        考研分数 ：总分：365   政治：68  英语：68  数学：108  计算机基础（计算机网络、数据结构）：121

        工作过与项目经验：2016年10月——2018年6月，就职于深圳宇轩网络科技有限公司，任PHP开发工程师，从事公司网站建设；包括公司CRM、ERP、CMS系统开发维护、微信开发、公司商城（电商）前端建设。 熟悉 MySQL 、Linux、Apache、Nginx、PHP、JS、HTML，以及主流的网站开发框架。

        独立开发项目：

        ①公司内部沟通系统(基于Mysql、PHP、Apache、Linux)，用于部门间的业务交流，信息安全，客户询盘统计分析。主要工作有需求分析、库表设计及实现、代码架构设计及实现，沟通系统数据的存取。

        ②公司物流部门和各大物流公司（Fedex、UPS、DHL）系统数据对接，通过webservice与物流公司的系统对接，上传物流信息生成并获取物流信息。

        ③公司物流运单打印插件（基于C#、JS），用于直接在web页面通过JS调用EPL热敏打印机；主要工作C#打印程序的设计以及实现，程序打包分发，后期维护。

        手机号：15271834241

        QQ号：834261743

        email:15271834241@163.com、834261743@qq.com

